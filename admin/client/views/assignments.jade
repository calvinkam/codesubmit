script(type="text/ng-template", id="views/assignments")
	div(codesubmit-header)
	.container#assignments-view
		.col-md-3
			.panel.panel-default.shadowedBox
				.panel-heading
					p
						h3
							strong Assignment List
						.message-text.text-danger(ng-if="assignmentListMsg.errorMessage") {{assignmentListMsg.errorMessage}}
						.message-text.text-success(ng-if="assignmentListMsg.successMessage") {{assignmentListMsg.successMessage}}
				.list-group(ng-init="itemsPerPage = 20;currentPage = 1")
					a.list-group-item(ng-repeat="assignment in assignments.slice((currentPage - 1) * itemsPerPage, (currentPage) * itemsPerPage)" iterms-per-page ng-class="assignment.asgId == asgId ? 'list-group-item-info' : ''" ng-href="#/assignments/{{assignment.asgId}}") {{assignment.name}}
					a.list-group-item.list-group-item-success(ng-href="#/assignments")
						span.glyphicon.glyphicon-plus
						|  Create New
			.text-center
				uib-pagination.pagination-sm(boundary-links="true" direction-links="false" boundary-link-numbers="true" max-size="5" total-items="assignments.length" ng-model="currentPage" items-per-page="itemsPerPage" previous-text="‹" next-text="›" first-text="«" last-text="»")
		.col-md-9
			uib-tabset
				uib-tab(heading="General")
					//- TODO: switch to use library building this form
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong {{assignment.asgId ? 'Assignment Details' : 'New Assignment'}}
									.pull-right.btn-toolbar
										button.btn.btn-default(type="submit" ng-if="assignment.asgId" ng-click="exportAssignment(assignment)") Export
										button.btn.btn-default(type="submit" ng-if="!assignment.asgId" ng-click="importAssignment(assignment)") Import
							//- {{forms.generalForm.$valid}}
							//- {{forms.generalForm.$error}}
							form(name="forms.generalForm")
								.form-group(ng-if="assignment.asgId")
									label(for="assignmentAsgId-input") Assignment ID:
									input.form-control#assignmentAsgId-input(type="text" disabled ng-model="assignment.asgId")
								.form-group
									label(for="assignmentName-input") Assignment Name:
									input.form-control#assignmentName-input(type="text" placeholder="Warm up exercise # 1" ng-model="assignment.name")
								.form-group
									label(for="assignmentStartDate-input") Start Datetime:
									input.form-control#assignmentStartDate-input(type="datetime-local" ng-model="assignment.startDt")
									p.help-block Same timezone as your current time: {{now.toString()}}
								.form-group
									label(for="assignmentDueDate-input") Due Datetime:
									input.form-control#assignmentDueDate-input(type="datetime-local" ng-model="assignment.dueDt")
								.form-group
									label(for="assignmentHardDueDate-input") Hard Due Datetime:
									input.form-control#assignmentHardDueDate-input(type="datetime-local" ng-model="assignment.hardDueDt")
								.form-group
									label(for="assignmentSubmissionLimit-input") Submission Limit:
									input.form-control#assignmentSubmissionLimit-input(type="number" min="1" max="1000" step="1" pattern="[0-9]+" ng-model="assignment.submissionLimit")
								.form-group
									label(for="assignmentPenalty-input") Late Submission Penalty (%):
									input.form-control#assignmentPenalty-input(type="number" min="0" max="100" step="1" pattern="[0-9]+" ng-model="assignment.penalty")
								p(ng-if="!assignment.asgId").help-block Remember to fill in configs after create.
								.message-text.text-danger(ng-if="assignmentDetailsMsg.errorMessage") {{assignmentDetailsMsg.errorMessage}}
								.message-text.text-success(ng-if="assignmentDetailsMsg.successMessage") {{assignmentDetailsMsg.successMessage}}
								.btn-toolbar
									button.btn.btn-primary(type="submit" ng-if="!assignment.asgId" ng-click="createAssignment(assignment)") Create
									button.btn.btn-primary(type="submit" ng-if="assignment.asgId" ng-click="updateAssignment(assignment)") Update
									a.btn.btn-link(href="preview/#/assignment/{{assignment.asgId}}" target="_blank" ng-if="assignment.asgId") Preview
									.pull-right.btn-toolbar
										button.btn.btn-danger(type="submit" ng-if="assignment.asgId" ng-click="deleteAssignment(assignment)") Delete
				uib-tab(heading="Sandbox Config" disable="assignment.asgId === undefined")
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong Sandbox Config
							//- {{forms.sandboxConfigForm.$valid}}
							//- {{forms.sandboxConfigForm.$error}}
							form(name="forms.sandboxConfigForm")
								.form-group
									label(for="assignmentCommandTimeoutMs-input") Command Timeout (Milliseconds):
									input.form-control#assignmentCommandTimeoutMs-input(type="number" min="0" max="4200000" step="1" pattern="[0-9]+" ng-model="assignment.sandboxConfig.commandTimeoutMs")
								.form-group
									label(for="assignmentTimeLimitS-input") Time Limit (Seconds):
									input.form-control#assignmentTimeLimitS-input(type="number" min="0" max="36000" step="1" pattern="[0-9]+" ng-model="assignment.sandboxConfig.timeLimitS")
								.form-group
									label(for="assignmentMemoryLimitMB-input") Memory Limit (MB):
									input.form-control#assignmentMemoryLimitMB-input(type="number" min="0" max="1024" step="1" pattern="[0-9]+" ng-model="assignment.sandboxConfig.memoryLimitMB")
								.form-group
									label(for="assignmentoutputLimitKB-input") Output Limit (KB):
									input.form-control#assignmentoutputLimitKB-input(type="number" min="0" max="102400" step="1" pattern="[0-9]+" ng-model="assignment.sandboxConfig.outputLimitKB")
								.form-group
									label(for="assignmentErrorToleranceLevel-input") Error Tolerance Level (0, 1, 2):
									input.form-control#assignmentErrorToleranceLevel-input(type="number" min="0" max="2" step="1" pattern="[0-9]+" ng-model="assignment.sandboxConfig.errorToleranceLevel")
								.form-group
									label(for="assignmentStrictCompare-input") Strict Compare:
									input#assignmentStrictCompare-input(type="checkbox" ng-model="assignment.sandboxConfig.strictCompare")
								.form-group
									label(for="assignmentLanguage-input") Language:
									select.form-control#assignmentLanguage-input(ng-model="assignment.sandboxConfig.language")
										option c
										option javascript
										option python
										option ruby
								.form-group
									label(for="assignmentCodeFilename-input") Code Filename:
									input.form-control#assignmentCodeFilename-input(type="text" ng-model="assignment.sandboxConfig.codeFilename")
								.form-group
									label(for="assignmentCompileCommand-input") Compile Command:
									input.form-control#assignmentCompileCommand-input(type="text" ng-model="assignment.sandboxConfig.compileCommand")
								.form-group
									label(for="assignmentExecutableFilename-input") Executable Filename:
									input.form-control#assignmentExecutableFilename-input(type="text" ng-model="assignment.sandboxConfig.executableFilename")
								.form-group
									label(for="assignmenttestCaseNames-input") Test Case Names:
									input.form-control#assignmenttestCaseNames-input(type="text" placeholder="e.g. case1, case2, case3, bonus1" ng-model="assignment.sandboxConfig.testCaseNames" disabled)
									p.help-block Test case names will be detected after uploading test cases.
								.message-text.text-danger(ng-if="assignmentDetailsMsg.errorMessage") {{assignmentDetailsMsg.errorMessage}}
								.message-text.text-success(ng-if="assignmentDetailsMsg.successMessage") {{assignmentDetailsMsg.successMessage}}
								button.btn.btn-primary(type="submit" ng-click="updateAssignment(assignment)") Update
				uib-tab(heading="Test Case" disable="assignment.asgId === undefined")
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong Test Cases
							div(ng-if="testCaseFileDetails")
								p
									strong Filename:
									|  {{testCaseFileDetails.filename}}
								p
									strong File Size:
									|  {{testCaseFileDetails.length}} B
								p
									strong Upload Datetime:
									|  {{testCaseFileDetails.uploadDate.toString()}}
								p
									strong MD5:
									|  {{testCaseFileDetails.md5}}
								p
									a.btn.btn-primary(href="{{testCaseFileDetails.downloadUrl}}") Download
							form
								.form-group
									label(for="testCase-input") Upload:
									input#testCase-input(type="file" onchange="angular.element(this).scope().testCaseFileChange(this)")
									p.help-block Supported format: .zip
								p
									strong Instructions:
									p.help-block Test cases zip should have a flat structure, each folder should contain an 'in' file, an 'out' file, and an optional 'hint' file. And should not contain any nested or empty folders.
								p
									strong Example:
									ul
										li case1/in
										li case1/out
										li case2/in
										li case2/out
										li case2/hint
								p(ng-if="testCaseFileNames.length > 0")
									strong Files detected:
									ul
										li(ng-repeat="name in testCaseFileNames") {{name}}
								p(ng-if="testCaseNames.length > 0")
									strong Test case names detected:
									ul
										li(ng-repeat="name in testCaseNames") {{name}}
								.message-text.text-danger(ng-if="testCaseMsg.errorMessage") {{testCaseMsg.errorMessage}}
								.message-text.text-success(ng-if="testCaseMsg.successMessage") {{testCaseMsg.successMessage}}
								button.btn.btn-primary(type="submit" ng-click="uploadTestCaseFile()") Upload
				uib-tab(heading="Description" disable="assignment.asgId === undefined")
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong Description
							codesubmit-editor(local-storage-key="'description/' + assignment.asgId" language="'markdown'" ng-model="assignment.description")
							p
								.message-text.text-danger(ng-if="assignmentDetailsMsg.errorMessage") {{assignmentDetailsMsg.errorMessage}}
								.message-text.text-success(ng-if="assignmentDetailsMsg.successMessage") {{assignmentDetailsMsg.successMessage}}
							p.help-block You can see live preview in the panel below.
							p
								button.btn.btn-primary(type="submit" ng-click="updateAssignment(assignment)") Update
					.panel.panel-default.shadowedBox
						.panel-body(marked="assignment.description")
				uib-tab(heading="Code Template" disable="assignment.asgId === undefined")
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong Code Template
							codesubmit-editor(local-storage-key="'codeTemplate/' + assignment.asgId" language="assignment.sandboxConfig.language" ng-model="assignment.codeTemplate")
							p
								.message-text.text-danger(ng-if="assignmentDetailsMsg.errorMessage") {{assignmentDetailsMsg.errorMessage}}
								.message-text.text-success(ng-if="assignmentDetailsMsg.successMessage") {{assignmentDetailsMsg.successMessage}}
							p
								button.btn.btn-primary(type="submit" ng-click="updateAssignment(assignment)") Update
				uib-tab(heading="Sample Input/Output" disable="assignment.asgId === undefined")
					.panel.panel-default.shadowedBox
						.panel-body
							p
								h2
									strong Sample Input
							codesubmit-editor(local-storage-key="'sampleInput/' + assignment.asgId" ace-options="{showInvisibles: true, theme: 'twilight'}" ng-model="assignment.sampleInput")
							p
								h2
									strong Sample Output
							codesubmit-editor(local-storage-key="'sampleOutput/' + assignment.asgId" ace-options="{showInvisibles: true, theme: 'twilight'}" ng-model="assignment.sampleOutput")
							p
								.message-text.text-danger(ng-if="assignmentDetailsMsg.errorMessage") {{assignmentDetailsMsg.errorMessage}}
								.message-text.text-success(ng-if="assignmentDetailsMsg.successMessage") {{assignmentDetailsMsg.successMessage}}
							p
								button.btn.btn-primary(type="submit" ng-click="updateAssignment(assignment)") Update
